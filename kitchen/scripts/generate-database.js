import { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  'https://kbonzhebgmehulkdkyas.supabase.co',\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imtib256aGViZ21laHVsa2RreWFzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM1ODY1MjQsImV4cCI6MjA2OTE2MjUyNH0.7yYNyj8i6B0ZZ5C17VsA4SinMUjaOnADPA_T_qBWh-c'\n);\n\nasync function generateDatabase() {\n  console.log('üöÄ Generating Kitchen Database');\n  console.log('==============================');\n\n  try {\n    console.log('üîå Testing connection...');\n    const { data, error } = await supabase.from('kitchen_users').select('count').limit(1);\n    \n    if (error && !error.message.includes('does not exist')) {\n      console.error('‚ùå Connection failed:', error.message);\n      return;\n    }\n    \n    console.log('‚úÖ Connected to Supabase');\n\n    const tables = [\n      'kitchen_users',\n      'kitchen_events', \n      'kitchen_stock',\n      'kitchen_cooking_logs',\n      'kitchen_indents',\n      'kitchen_indent_items',\n      'kitchen_stock_updates',\n      'kitchen_leftovers'\n    ];\n    \n    const existingTables = [];\n    \n    console.log('üîç Checking tables...');\n    for (const table of tables) {\n      try {\n        const { error } = await supabase.from(table).select('*').limit(1);\n        if (!error) {\n          existingTables.push(table);\n          console.log('   ‚úÖ Found:', table);\n        } else {\n          console.log('   ‚ùå Missing:', table);\n        }\n      } catch (e) {\n        console.log('   ‚ùå Missing:', table);\n      }\n    }\n\n    if (existingTables.length === 0) {\n      console.log('\\nüìã No tables found!');\n      console.log('\\nüîß Manual Setup Required:');\n      console.log('1. Go to Supabase Dashboard > SQL Editor');\n      console.log('2. Copy and run the SQL from: kitchen/sql/create-tables.sql');\n      console.log('3. Run this script again');\n      console.log('\\nüìÑ The SQL file contains all table definitions and sample data.');\n      return;\n    }\n\n    console.log('\\nüìä Inserting sample data...');\n    \n    // Insert users\n    if (existingTables.includes('kitchen_users')) {\n      const { error } = await supabase.from('kitchen_users').upsert([\n        {\n          id: '550e8400-e29b-41d4-a716-446655440001',\n          email: 'chef@butta.com',\n          name: 'John Chef',\n          role: 'CHEF',\n          phone: '+1234567890',\n          is_active: true\n        },\n        {\n          id: '550e8400-e29b-41d4-a716-446655440002',\n          email: 'manager@butta.com',\n          name: 'Sarah Manager',\n          role: 'KITCHEN_MANAGER',\n          phone: '+1234567891',\n          is_active: true\n        },\n        {\n          id: '550e8400-e29b-41d4-a716-446655440003',\n          email: 'admin@butta.com',\n          name: 'Admin User',\n          role: 'ADMIN',\n          phone: '+1234567892',\n          is_active: true\n        }\n      ], { onConflict: 'email' });\n      \n      if (!error) {\n        console.log('   ‚úÖ Sample users created');\n      } else {\n        console.log('   ‚ö†Ô∏è Users error:', error.message);\n      }\n    }\n\n    // Insert events\n    if (existingTables.includes('kitchen_events')) {\n      const { error } = await supabase.from('kitchen_events').upsert([\n        {\n          id: 'event-001',\n          name: 'Smith Wedding Reception',\n          date: '2024-12-15T18:00:00Z',\n          guest_count: 150,\n          event_type: 'Wedding',\n          status: 'PLANNED',\n          assigned_chef: '550e8400-e29b-41d4-a716-446655440001'\n        },\n        {\n          id: 'event-002',\n          name: 'Corporate Annual Dinner',\n          date: '2024-12-20T19:00:00Z',\n          guest_count: 200,\n          event_type: 'Corporate',\n          status: 'PLANNED',\n          assigned_chef: '550e8400-e29b-41d4-a716-446655440002'\n        }\n      ], { onConflict: 'id' });\n      \n      if (!error) {\n        console.log('   ‚úÖ Sample events created');\n      } else {\n        console.log('   ‚ö†Ô∏è Events error:', error.message);\n      }\n    }\n\n    // Insert stock\n    if (existingTables.includes('kitchen_stock')) {\n      const { error } = await supabase.from('kitchen_stock').upsert([\n        {\n          id: 'stock-001',\n          item_name: 'Basmati Rice',\n          category: 'Grains',\n          quantity: 100.00,\n          unit: 'kg',\n          cost_per_unit: 2.50,\n          min_stock: 20.00,\n          is_active: true\n        },\n        {\n          id: 'stock-002',\n          item_name: 'Chicken Breast',\n          category: 'Meat',\n          quantity: 50.00,\n          unit: 'kg',\n          cost_per_unit: 8.00,\n          min_stock: 10.00,\n          is_active: true\n        },\n        {\n          id: 'stock-003',\n          item_name: 'Tomatoes',\n          category: 'Vegetables',\n          quantity: 25.00,\n          unit: 'kg',\n          cost_per_unit: 3.00,\n          min_stock: 5.00,\n          is_active: true\n        },\n        {\n          id: 'stock-004',\n          item_name: 'Onions',\n          category: 'Vegetables',\n          quantity: 30.00,\n          unit: 'kg',\n          cost_per_unit: 2.00,\n          min_stock: 10.00,\n          is_active: true\n        }\n      ], { onConflict: 'id' });\n      \n      if (!error) {\n        console.log('   ‚úÖ Sample stock created');\n      } else {\n        console.log('   ‚ö†Ô∏è Stock error:', error.message);\n      }\n    }\n\n    console.log('\\nüéâ Database generation completed!');\n    console.log('\\nüìä Summary:');\n    console.log('   ‚úÖ Connection: Working');\n    console.log('   ‚úÖ Tables found:', existingTables.length + '/' + tables.length);\n    console.log('   ‚úÖ Sample data: Inserted');\n    console.log('   ‚úÖ Kitchen module: Ready');\n    \n    console.log('\\nüîë Test Users:');\n    console.log('   - chef@butta.com (CHEF)');\n    console.log('   - manager@butta.com (KITCHEN_MANAGER)');\n    console.log('   - admin@butta.com (ADMIN)');\n    \n    console.log('\\nüöÄ Next Steps:');\n    console.log('   1. Run: npm run dev');\n    console.log('   2. Access Kitchen Dashboard');\n    console.log('   3. Test all functionality');\n    \n    if (existingTables.length < tables.length) {\n      console.log('\\n‚ö†Ô∏è Missing Tables:');\n      console.log('   Some tables are missing for full functionality.');\n      console.log('   Run the SQL script in Supabase Dashboard.');\n    }\n\n  } catch (error) {\n    console.error('\\n‚ùå Generation failed:', error.message);\n    console.error('\\nüí° Troubleshooting:');\n    console.error('   1. Check Supabase project is active');\n    console.error('   2. Verify network connection');\n    console.error('   3. Run SQL script manually in Supabase Dashboard');\n  }\n}\n\ngenerateDatabase();"