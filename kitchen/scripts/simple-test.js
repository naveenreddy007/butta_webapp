import { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  'https://kbonzhebgmehulkdkyas.supabase.co',\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imtib256aGViZ21laHVsa2RreWFzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM1ODY1MjQsImV4cCI6MjA2OTE2MjUyNH0.7yYNyj8i6B0ZZ5C17VsA4SinMUjaOnADPA_T_qBWh-c'\n);\n\nasync function test() {\n  console.log('Testing Supabase connection...');\n  \n  try {\n    const { data, error } = await supabase\n      .from('kitchen_users')\n      .select('count')\n      .limit(1);\n    \n    if (error && !error.message.includes('does not exist')) {\n      console.error('Connection failed:', error.message);\n      return;\n    }\n    \n    console.log('‚úÖ Supabase connection working!');\n    \n    // Check if tables exist\n    const tables = ['kitchen_users', 'kitchen_events', 'kitchen_stock'];\n    const existing = [];\n    \n    for (const table of tables) {\n      try {\n        const { error } = await supabase.from(table).select('*').limit(1);\n        if (!error) {\n          existing.push(table);\n          console.log('‚úÖ Found table:', table);\n        } else {\n          console.log('‚ùå Missing table:', table);\n        }\n      } catch (e) {\n        console.log('‚ùå Missing table:', table);\n      }\n    }\n    \n    if (existing.length === 0) {\n      console.log('\\nüìã No kitchen tables found.');\n      console.log('You need to create tables manually in Supabase Dashboard.');\n      console.log('SQL file: kitchen/sql/create-tables.sql');\n    } else {\n      console.log('\\nüéâ Found', existing.length, 'out of', tables.length, 'tables');\n      console.log('Kitchen module is ready to use!');\n    }\n    \n  } catch (error) {\n    console.error('Test failed:', error.message);\n  }\n}\n\ntest();"