import { createClient } from '@supabase/supabase-js';\n\nconst SUPABASE_URL = 'https://kbonzhebgmehulkdkyas.supabase.co';\nconst SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imtib256aGViZ21laHVsa2RreWFzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM1ODY1MjQsImV4cCI6MjA2OTE2MjUyNH0.7yYNyj8i6B0ZZ5C17VsA4SinMUjaOnADPA_T_qBWh-c';\n\nconst supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\nasync function setupPrismaTables() {\n  console.log('Kitchen Module - Prisma Table Setup');\n  console.log('===================================');\n\n  try {\n    console.log('Testing connection...');\n    const { data, error } = await supabase.from('kitchen_users').select('count').limit(1);\n    \n    if (error && !error.message.includes('does not exist')) {\n      throw new Error('Connection failed: ' + error.message);\n    }\n    \n    console.log('Connected to Supabase');\n\n    const tables = ['kitchen_users', 'kitchen_events', 'kitchen_stock', 'kitchen_cooking_logs'];\n    const existingTables = [];\n    \n    console.log('Checking tables...');\n    for (const table of tables) {\n      try {\n        const { error } = await supabase.from(table).select('*').limit(1);\n        if (!error) {\n          existingTables.push(table);\n          console.log('   Found: ' + table);\n        } else {\n          console.log('   Missing: ' + table);\n        }\n      } catch (e) {\n        console.log('   Missing: ' + table);\n      }\n    }\n\n    if (existingTables.length === 0) {\n      console.log('No tables found - Manual setup required:');\n      console.log('1. Go to Supabase Dashboard > SQL Editor');\n      console.log('2. Run the SQL from: kitchen/sql/create-tables.sql');\n      console.log('3. Come back and run this script again');\n      return;\n    }\n\n    console.log('Setting up sample data...');\n    \n    if (existingTables.includes('kitchen_users')) {\n      const { error } = await supabase.from('kitchen_users').upsert([\n        { id: '550e8400-e29b-41d4-a716-446655440001', email: 'chef@butta.com', name: 'John Chef', role: 'CHEF', phone: '+1234567890' },\n        { id: '550e8400-e29b-41d4-a716-446655440002', email: 'manager@butta.com', name: 'Sarah Manager', role: 'KITCHEN_MANAGER', phone: '+1234567891' },\n        { id: '550e8400-e29b-41d4-a716-446655440003', email: 'admin@butta.com', name: 'Admin User', role: 'ADMIN', phone: '+1234567892' }\n      ], { onConflict: 'email' });\n      \n      if (!error) console.log('   Sample users created');\n    }\n\n    if (existingTables.includes('kitchen_events')) {\n      const { error } = await supabase.from('kitchen_events').upsert([\n        { id: 'event-001', name: 'Smith Wedding', date: '2024-12-15T18:00:00Z', guest_count: 150, event_type: 'Wedding', assigned_chef: '550e8400-e29b-41d4-a716-446655440001' },\n        { id: 'event-002', name: 'Corporate Dinner', date: '2024-12-20T19:00:00Z', guest_count: 200, event_type: 'Corporate', assigned_chef: '550e8400-e29b-41d4-a716-446655440002' }\n      ], { onConflict: 'id' });\n      \n      if (!error) console.log('   Sample events created');\n    }\n\n    if (existingTables.includes('kitchen_stock')) {\n      const { error } = await supabase.from('kitchen_stock').upsert([\n        { id: 'stock-001', item_name: 'Basmati Rice', category: 'Grains', quantity: 100, unit: 'kg', cost_per_unit: 2.5, min_stock: 20 },\n        { id: 'stock-002', item_name: 'Chicken Breast', category: 'Meat', quantity: 50, unit: 'kg', cost_per_unit: 8.0, min_stock: 10 }\n      ], { onConflict: 'id' });\n      \n      if (!error) console.log('   Sample stock created');\n    }\n\n    console.log('Setup completed successfully!');\n    console.log('Summary:');\n    console.log('   Tables ready: ' + existingTables.length + '/' + tables.length);\n    console.log('   Sample data inserted');\n    console.log('   Kitchen module ready');\n    \n    console.log('Test Users:');\n    console.log('   - chef@butta.com (CHEF)');\n    console.log('   - manager@butta.com (KITCHEN_MANAGER)');\n    console.log('   - admin@butta.com (ADMIN)');\n    \n    console.log('Next Steps:');\n    console.log('   1. Run: npm run dev');\n    console.log('   2. Access Kitchen Dashboard');\n    console.log('   3. Test functionality');\n    \n    if (existingTables.length < tables.length) {\n      console.log('Missing tables detected.');\n      console.log('   Run the SQL script in Supabase for full functionality.');\n    }\n\n  } catch (error) {\n    console.error('Setup failed:', error.message);\n    console.error('Troubleshooting:');\n    console.error('   1. Check Supabase project is active');\n    console.error('   2. Verify network connection');\n    console.error('   3. Run SQL script manually in Supabase Dashboard');\n    process.exit(1);\n  }\n}\n\nsetupPrismaTables();"